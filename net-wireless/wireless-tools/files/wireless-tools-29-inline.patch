diff -Nru wireless_tools.29.old/iwlib.h wireless_tools.29/iwlib.h
--- wireless_tools.29.old/iwlib.h	2007-06-22 19:01:04.000000000 +0100
+++ wireless_tools.29/iwlib.h	2010-01-28 00:24:59.000000000 +0000
@@ -60,36 +60,6 @@
 /* Private copy of Wireless extensions (in this directoty) */
 #include "wireless.h"
 
-/* Make gcc understant that when we say inline, we mean it.
- * I really hate when the compiler is trying to be more clever than me,
- * because in this case gcc is not able to figure out functions with a
- * single call site, so not only I have to tag those functions inline
- * by hand, but then it refuse to inline them properly.
- * Total saving for iwevent : 150B = 0.7%.
- * Fortunately, in gcc 3.4, they now automatically inline static functions
- * with a single call site. Hurrah !
- * Jean II */
-#undef IW_GCC_HAS_BROKEN_INLINE
-#if __GNUC__ == 3
-#if __GNUC_MINOR__ >= 1 && __GNUC_MINOR__ < 4
-#define IW_GCC_HAS_BROKEN_INLINE	1
-#endif	/* __GNUC_MINOR__ */
-#endif	/* __GNUC__ */
-/* However, gcc 4.0 has introduce a new "feature", when compiling with
- * '-Os', it does not want to inline iw_ether_cmp() and friends.
- * So, we need to fix inline again !
- * Jean II */
-#if __GNUC__ == 4
-#define IW_GCC_HAS_BROKEN_INLINE	1
-#endif	/* __GNUC__ */
-/* Now, really fix the inline */
-#ifdef IW_GCC_HAS_BROKEN_INLINE
-#ifdef inline
-#undef inline
-#endif	/* inline */
-#define inline		inline		__attribute__((always_inline))
-#endif	/* IW_GCC_HAS_BROKEN_INLINE */
-
 #ifdef __cplusplus
 extern "C" {
 #endif
